@using V308CMS.Common
@using V308CMS.Data.Enum
@using V308CMS.Helpers.Url
@model V308CMS.Models.ProductCategoryViewModels
@{
    Layout = "~/Views/themes/" + ViewBag.domain + "/Layout/Layout.cshtml";
}
@section header {
    <title>@Model.Category.Name - @ViewBag.SiteName</title>
    <meta name="keywords" content="@Model.Category.Name">
    <meta property="og:url" content="@Request.Url">
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@Model.Category.Name">
    <meta property="og:image" content="@Ultility.ImgUrl(@Model.Category.Image)">
    <meta property="og:description" content="@Model.Category.Description">
}

<div class="row col-sidebar-right">

<div class="col-fillter-product col-md-3 col-sm-3 col-xs-12">
    <div class="col-md-3 col-sm-3 col-xs-12 col-left" id="filter-sidebar">
        @if (Model.ListSubCategory != null && Model.ListSubCategory.Count > 0)
        {
            <div class="widget sidebar-links">
                <div class="block-title">
                    <span>
                        Danh mục
                    </span>
                </div>
                <div class="widget-content">
                    @{Html.RenderPartial("ListSubCategory", Model.ListSubCategory);}
                </div>
            </div>
         }
        <div class="block-title" style="display: none;">
            <span>Filter Selection</span>
        </div>
        <div class="sidebar-block">
            @if (string.IsNullOrWhiteSpace(Model.Filter) || (!string.IsNullOrWhiteSpace(Model.Filter) && !Model.Filter.Contains(string.Format("|{0}_", (int)FilterEnum.ByBrand))))
            {
                <div class="sidebar-custom sidebar-tag size">
                    @{Html.RenderAction("LoadListProductBrandFilterAsync", "Async", new { categoryId = Model.CategoryId, currentRouteData = HttpContext.Current.Request.RequestContext.RouteData.Values });}
                </div>
             }
            @if (string.IsNullOrWhiteSpace(Model.Filter) || (!string.IsNullOrWhiteSpace(Model.Filter) && !Model.Filter.Contains(string.Format("|{0}_", (int)FilterEnum.ByManufacturer))))
            {
                <div class="sidebar-custom size">
                    @{ Html.RenderAction("LoadListManufacturerFilterAsync", "Async");}
                </div>
             }
            <div class="sidebar-custom sliebar-price">
                <div class="title">
                    <h3>
                        <span>
                            GIÁ
                        </span>
                    </h3>
                </div>
                <div class="content">
                    <ul>
                        <li>
                            <a href="@Url.Action("ListByCategory", "Home", new
                                     {
                                         filter = string.Format("|{0}_0|{1}_100|", (int) FilterEnum.ByFromPrice, (int) FilterEnum.ByToPrice),
                                         sort = Model.Sort
                                     })" title="Dưới 100k">
                                <label>
                                    Dưới 100k
                                </label>

                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("ListByCategory", "Home", new
                                     {
                                         filter = string.Format("|{0}_100|{1}_300|", (int) FilterEnum.ByFromPrice, (int) FilterEnum.ByToPrice),
                                         sort = Model.Sort
                                     })" title="100k - 300k">
                                <label>
                                    100k - 300k
                                </label>

                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("ListByCategory", "Home", new
                                     {
                                         filter = string.Format("|{0}_500|{1}_1000|", (int) FilterEnum.ByFromPrice, (int) FilterEnum.ByToPrice),
                                         sort = Model.Sort
                                     })" title="500k - 1.000k">
                                <label>500k - 1.000k</label>
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("ListByCategory", "Home", new
                                     {
                                         filter = string.Format("|{0}_1000|{1}_00|", (int) FilterEnum.ByFromPrice, (int) FilterEnum.ByToPrice),
                                         sort = Model.Sort
                                     })" title="Trên 1.000k">
                                <label>Trên 1.000k</label>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="async bestseller-sidebar bestseller-homepage" data-url="@Url.LoadListProductBestSellerAsyncUrl(Model.CategoryId)"></div>

        <div class="block-bottom-sidebar">
            <img src="//cdn.shopify.com/s/files/1/1498/2346/t/12/assets/block_image_left.jpg?9436750478273192716" alt="">
            <div class="content-block-left">
                <span>Only BigSale $99.00</span>
                <p>Design 2016</p>
            </div>
        </div>


    </div>
</div>
<div class="col-md-9 col-sm-12 col-xs-12 col-main">

    <header class="page-header">
        <div class="images">
            <img src="@Model.Category.ImageBanner.ToUrl(870, 225)" alt="@Model.Category.Name">
        </div>
    </header>

    <div class="toolbar ">

        <div class="toolbar-mode row">
            <div class="col-md-8 col-sm-8 col-xs-12">
                <div class="filter-collection-left">
                    <a class="btn">Lọc</a>
                </div>
                <div class="collection-view">
                    <label>Hiển thị</label>
                    <a class="change-view grid active" id="grid" rel="tooltip" title="Grid view" onclick="display('grid');"><i class="fa fa-th" aria-hidden="true"></i></a>
                    <a class="change-view list" id="list" rel="tooltip" title="List view" onclick="display('list');"><i class="fa fa-list-ul" aria-hidden="true"></i></a>

                </div>
                <div class="browse-tags">
                    <label>Sắp xếp</label>
                    @Html.DropDownListFor(filter => Model.Sort,Model.ListSort, new {@class = "sort-by"})
                </div>
            </div>
            <div class="col-md-4 total-page ">
                <div class="page-total">
                    <span>Showing</span>: <span> 1-6 of 6 per page</span>
                </div>
            </div>
        </div>
    </div>
    <script>

        jQuery('.sort-by')
            .val('title-ascending')
            .bind('change', function() {
                Shopify.queryParams.sort = jQuery(this).val();
                location.search = jQuery.param(Shopify.queryParams).replace(/\+/g, '%20');
            });

        function replaceUrlParam(url, paramName, paramValue) {
            var pattern = new RegExp('(' + paramName + '=).*?(&|$)'),
                newUrl = url.replace(pattern, '$1' + paramValue + '$2');
            if (newUrl == url) {
                newUrl = newUrl + (newUrl.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;
            }
            return newUrl;
        }

        jQuery(function() {
            jQuery('.filter-collection-left > a').on('click', function() {
                    jQuery('.wrapper').addClass('show-fillter');
                }
            );
            jQuery(document).mouseup(function(e) {

                var container = jQuery("#filter-sidebar");

                if (!container.is(e.target) // if the target of the click isn't the container...
                    && container.has(e.target).length === 0) // ... nor a descendant of the container
                {
                    jQuery('.wrapper').removeClass('show-fillter');
                }
            });

        });

        jQuery(function() {
            jQuery('.filter-collection-left > a').on('click', function() {
                    jQuery('.wrapper-container').addClass('show-fillter');
                }
            );
            jQuery(document).mouseup(function(e) {

                var container = jQuery("#filter-sidebar");

                if (!container.is(e.target) // if the target of the click isn't the container...
                    && container.has(e.target).length === 0) // ... nor a descendant of the container
                {
                    jQuery('.wrapper-container').removeClass('show-fillter');
                }
            });
            jQuery('body.template-collection .collection-view a').on('click', function() {
                jQuery('.collection-view a.active').removeClass('active');
                jQuery(this).addClass('active');

            });

            jQuery('body.template-collection .collection-view a.list').on('click', function() {
                jQuery('body.template-collection').find('.products-grid').addClass('product-list-item');
                if (jQuery('body.template-collection .products-grid').hasClass('product-grid-item')) {
                    jQuery('body.template-collection').find('.products-grid').removeClass('product-grid-item');

                } else {
                    jQuery('body.template-collection').find('.products-grid').addClass('');
                }

            });
            jQuery('body.template-collection .collection-view a.grid').on('click', function() {
                jQuery('body.template-collection').find('.products-grid').addClass('product-grid-item');
                if (jQuery('body.template-collection .products-grid').hasClass('product-list-item')) {
                    jQuery('body.template-collection').find('.products-grid').removeClass('product-list-item');

                } else {
                    jQuery('body.template-collection').find('.products-grid').addClass('');
                }
            });
            jQuery('body.template-collection .collection-view a.list').on('click', function() {
                jQuery('body.template-collection').find('.products-grids').addClass('product-list-item');
                if (jQuery('body.template-collection .products-grids').hasClass('product-grid-item')) {
                    jQuery('body.template-collection').find('.products-grids').removeClass('product-grid-item');

                } else {
                    jQuery('body.template-collection').find('.products-grids').addClass('');
                }

            });
            jQuery('body.template-collection .collection-view a.grid').on('click', function() {
                jQuery('body.template-collection').find('.products-grids').addClass('product-grid-item');
                if (jQuery('body.template-collection .products-grids').hasClass('product-list-item')) {
                    jQuery('body.template-collection').find('.products-grids').removeClass('product-list-item');

                } else {
                    jQuery('body.template-collection').find('.products-grids').addClass('');
                }
            });


        });
    </script>

    @if (Model.ListProduct != null && Model.ListProduct.Count > 0)
    {
        <div class="products-grid product-grid-item">
            @foreach (var product in Model.ListProduct)
            {
                { Html.RenderPartial("ProductComponent", product);}
            }
        </div>
    }
</div>
<div class="overlay-filter"></div>
</div>
<script type="text/javascript">
    $(".async").each(function(index, item) {
        var url = $(item).data("url");
        if (url && url.length > 0) {
            $(item).html("<span>Loading...</span>");
            $(item).load(url, function(response, status, xhr) {
                if (status === "error") {
                    $(item).html("<span class='error'>Không thể tải dữ liệu</span>");
                }
            });
        }

    });
</script>
@section Script
{
    <script src="//cdn.shopify.com/s/files/1/1498/2346/t/12/assets/selectize.min.js?9436750478273192716" type="text/javascript"></script>
}