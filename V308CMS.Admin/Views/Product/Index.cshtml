<<<<<<< HEAD
﻿@using V308CMS.Admin.Helpers.Url
@model V308CMS.Data.ProductPage
@{
    ViewBag.Title = "Sản phẩm";
    ViewBag.LinkBack = "<li><a href=" + Url.ProductIndexUrl()+">Sản phẩm</a> </li>";
    ViewBag.MenuValue = 1;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .divfiter {
        display: inline-block;
        height: 30px;
    }

        .divfiter .inputtxt {
            width: 250px;
        }

        .divfiter .btsubmit {
            width: 120px;
            height: 38px;
            display: inline-block;
            overflow: hidden;
            background-color: #47abd1;
            color: white;
            text-align: center;
            position: absolute;
        }

    .cbsp {
        width: 30px;
    }

    .cbhead {
        margin-right: 10px !important;
        display: block;
        clear: both;
        position: relative !important;
        margin-left: 5px !important;
    }
</style>
<script type="text/javascript">
    function GoToPage() {
        var pPage = $("#pagegoId").val();
        if (parseInt(pPage) <= 0) {
            pPage = 0;
        }
        $("#wait").css("display", "block");
        window.location = "/Product/Index?pPage=" + pPage;
    }
    function UpdateProductList() {
        $("#wait").css("display", "block");
        $('#SanPhamUpdateForm').find('input[type="checkbox"]').each(function () {
            var checkbox_this = $(this);
            if (checkbox_this.is(":checked") == true) {
                checkbox_this.attr('value', 'true');
            } else {
                checkbox_this.prop('checked', true);
                //DONT' ITS JUST CHECK THE CHECKBOX TO SUBMIT FORM DATA
                checkbox_this.attr('value', 'false');
            }
        });
        var formData = $('#SanPhamUpdateForm').serialize();
        //gui thong tin dang ky len may chu
        $.ajax({
            type: 'POST',
            data: formData,
            dataType: 'json',
            url: "/Product/SanPhamUpdate/",
            timeout: 60000,
            success: function (data) {
                //$("#wait").css("display", "none");
                if (data.code == 1) {
                    alert(data.message);
                    window.location = "@Url.ProductIndexUrl()";
                }
                else {
                    HienThiPopUp(data.message);
                    scrollWindow(10);
                }
            },
            error: function (x, t, m) {
                $("#wait").css("display", "none");
            }
        });
    }
</script>
<div>
    <div>
        <div id="close" class="mheader">
            <a href="@Url.ProductCreateUrl()" title="Thêm mới">
                <img src="@Url.CreateNewImageUrl()" alt="Thêm mới" />
            </a>
        </div>
        <div style="margin-top: 16px;">
            <form action="@Url.ProductIndexUrl()">
                <input type="hidden" name="pPage" />
                <div class="divfiter">Tìm kiếm</div>
                <div class="divfiter">
                    <input class="inputtxt" name="pKey" placeholder="Nhập từ khóa tìm kiếm" value="@Model.Key" type="text" />
                </div>
                <div class="divfiter">@Html.Raw(Model.HtmlNhom)</div>
                <div class="divfiter">
                    <select style="width: 250px;" name="pMarket">
                        <option value="0" selected="selected">Tất cả các siêu thị</option>
                        @foreach (V308CMS.Data.Market it in Model.MarketList)
                        {
                            <option @Html.Raw(V308CMS.Common.Ultility.CheckSeclectSelected(it.ID, Model.Market)) value="@it.ID">@it.UserName</option>
                        }
                    </select>
                </div>
                <div class="divfiter">
                    <input type="submit" class="btsubmit" value="Tìm Kiếm">
                </div>
                <div class="divfiter">
                    <input type="button" class="btsubmit" onclick="javascript:UpdateProductList();" style="right: 45px;" value="Cập nhật">
                </div>
            </form>
        </div>
        @*    <div>
                <a href="/Admin/SanPham?pPage=@Model.BackPage&pType=@Model.pProductType.Parent" class="btcate0"><span class="fa fa-shopping-cart"></span>Tất cả</a>
                @foreach (V308CMS.Data.ProductType it in @Model.ProductTypeLt) {
                <a href="/Admin/SanPham?pPage=1&pType=@it.ID" class="btcate"><span class="fa fa-shopping-cart"></span>@it.Name</a>
                }
            </div>*@
        <hr />
        <div style="width: 100%;">
            <form action="/Product/SanPhamUpdate" id="SanPhamUpdateForm">
                <div class="RadGrid RadGrid_MetroTouch table table-striped table-bordered table-hover dataTable" tabindex="0">
                    @Html.Raw(Model.Html)
                </div>
            </form>
        </div>
        <div class="wpmn_page_navi" style="margin-bottom: 60px;">
            <a href="@Url.ProductIndexUrl(new {pPage =Model.BackPage,pType =Model.TypeId,pMarket =Model.Market,pKey =Model.Key})">Back</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 1, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">1</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 2, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">2</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 3, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">3</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 4, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">4</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 5, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">5</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 6, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">6</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 7, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">7</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 8, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">8</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 9, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">9</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = 10, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">10</a>
            <a class="current" href="@Url.ProductIndexUrl(new {pPage = Model.BackPage, pType = Model.TypeId, pMarket = Model.Market, pKey = Model.Key})">@Model.Page</a>
            <a href="@Url.ProductIndexUrl(new {pPage =Model.NextPage,pType =Model.TypeId,pMarket =Model.Market,pKey =Model.Key})">Next</a>
          
            <input type="button" class="btsubmit" onclick="javascript: GoToPage();" style="float: right; margin-left: 20px; background-color: #47abd1;" value="Chuyển tới">
            <input type="text" id="pagegoId" placeholder="Nhập trang bạn cần tới" style="width: 250px; float: right; margin-bottom: 6px;" />
        </div>
        <hr />
    </div>
    <div style="display: none;" role="status" aria-hidden="true">
        <div class="area"></div>
        <div class="form-loading"></div>
    </div>
</div>
=======
﻿@using V308CMS.Admin.Helpers
@using V308CMS.Admin.Helpers.Url
@using V308CMS.Admin.Models
@using V308CMS.Admin.Models.UI
@using V308CMS.Common
@using V308CMS.Data
@model ProductViewModels

@{
    ViewBag.Title = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_LayoutV2.cshtml";
    var listCategory = (List<MutilCategoryItem>
    )ViewBag.ListCategory;
    var listStateFilter = (List<SelectListItem>
        )ViewBag.ListStateFilter;
    var listQuantityFilter = (List<SelectListItem>
        )ViewBag.ListQuantityFilter;
    var listBrand = (List<Brand>
        )ViewBag.ListBrand;
    var listProvider = (List<Admin>) ViewBag.ListProvider;
    var listId = "";
}
<link href="/Content/vendor/bootstrap-editable/css/bootstrap-editable.css" rel="stylesheet">
<script src="/Content/vendor/bootstrap-editable/js/bootstrap-editable.js"></script>
<script src="/Content/vendor/editable-table/mindmup-editabletable.js?v=2.9"></script>
@Html.Partial("UI/_AddNewButton", Url.ProductCreateUrl())
<div class="row" style="margin-bottom: 2px">
    <form action="@Url.ProductIndexUrl()" method="get">
        <div class="col-md-2">
            <div class="input-group">
                <input class="form-control" id="system-search" name="keyword" placeholder="Nhập từ khóa hoặc Mã sản phẩm" value="@Model.Keyword" style="width: 125%">
            </div>
        </div>

        <div class="col-md-2">
            <div class="input-group" style="width: 150px;margin-left:20px">
                @Html.Partial("UI/_MutilDropDownlist", new MutilDropDownlistModels
           {
               Name = "CategoryId",
               Data = listCategory,
               PlaceHolder = "Chọn loại sản phẩm",
               ParentId = Model.CategoryId

           })
            </div>

        </div>
        <div class="col-md-2">
            @Html.DropDownListFor(product => product.State, listStateFilter, new
       {
           @class = "form-control",
           placeholder = "Chọn Trạng thái",
           style = "width:150px; margin-left: -44px"
       })
        </div>
        <div class="col-md-2">
            @Html.DropDownListFor(product => product.Quantity, listQuantityFilter, new
       {
           @class = "form-control",
           placeholder = "Chọn số lượng",
           style = "width: 150px;margin-left:-107px"
       })

        </div>
        <div class="col-md-2">
            @Html.DropDownListFor(product => product.Brand, new SelectList(listBrand, "ID", "Name", Model.Brand),
                "Thương hiệu", new
                {
                    @class = "form-control",
                    placeholder = "Thương hiệu",
                    style = "width: 150px;margin-left:-170px"
                })
        </div>
        <div class="col-md-2">

            <div class="input-group">
                @Html.DropDownListFor(product => product.Provider, new SelectList(listProvider, "ID", "UserName", Model.Provider),
                "Nhà cung cấp", new
                {
                    @class = "form-control",
                    placeholder = "Nhà cung cấp",
                    style = "width: 150px; margin-left:-233px;"
                })
                <button type="submit" class="btn btn-default" style="margin-left: -79px">
                    <i class="fa fa-search"></i>
                    Tìm kiếm
                </button>
            </div>
        </div>
    </form>

</div>

<div class="modal fade bs-example-modal-sm" id="myPleaseWait" tabindex="-1"
     role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    <span class="glyphicon glyphicon-time">
                    </span>Vui lòng đợi...
                </h4>
            </div>
            <div class="modal-body">
                <div class="progress">
                    <div class="progress-bar progress-bar-info progress-bar-striped active"
                         style="width: 100%">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (Model.Data.Any())
{
    <div class="panel panel-default">

        <!-- /.panel-heading -->
        <div class="panel-body">
            <button class="btn btn-danger" id="btn-delete-all" style="margin-top: 40px;">
                <i class="fa fa-trash"></i>
                Xóa lựa chọn
            </button>

            <button class="btn btn-danger" id="btn-hide-all" style="margin-top: 40px;">
                <i class="fa fa-lock"></i>
                Ẩn lựa chọn
            </button>
            @Html.Partial("UI/_Pagination", new PaginationModels
           {
               TotalPages = Model.TotalPages,
               BaseUrl = Url.ProductIndexUrl(new
               {
                  
                   Model.Keyword,
                   Model.State,
                   Model.CategoryId,
                   Model.Quantity,
                   page = 1
               }),
               CurrentPage = Model.Page,
               PageParamFormat = @"page=\d+",
               RecordPerPages = 5
           })
            <table width="100%" class="table table-striped table-bordered table-hover" id="example">
                <thead>
                    <tr>
                        <th style="text-align: center"><input name="select_all" value="1" id="chk-select-all" type="checkbox" /></th>
                        <th>Tên</th>
                        <th>Ảnh</th>
                        <th>Mã</th>
                        <th>Ck</th>
                        <th>Chuyên mục</th>
                        <th>Giá</th>
                        <th>SL</th>
                        <th>Thứ tự</th>
                        <th>Ngày đăng</th>
                        <th style="text-align: center">Trạng thái</th>
                        <th style="text-align: center">Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Data.Count; i++)
                    {
                        var product = Model.Data[i];
                        listId = listId + "," + product.Id;
                        <tr>
                            <td style="text-align: center">
                                <input type="checkbox" name="id[]" value="@product.Id" />
                            </td>
                            <td>
                                <a title="Cập nhật sản phẩm @product.Name" class="btn btn-link" href="@Url.ProductEditUrl(new {product.Id})">
                                    @product.Name.ToTitle(25)
                                </a>
                            </td>
                            <td>
                                <img class="image-brand img-circle" src="@product.Image.ToImageUrl()" alt="@product.Name" />
                            </td>
                            <td data-id="@product.Id" data-class="code">
                                @product.Code

                            </td>
                            <td data-id="@product.Id" data-class="npp">
                                @(product.Npp.HasValue ? product.Npp.Value.ToString() : "")
                            </td>
                            <td>
                                @product.CategoryName
                            </td>
                            <td data-id="@product.Id" data-class="price">
                                @(product.Price.HasValue ? product.Price.Value.ToString("N0") : "")                                
                            </td>
                            <td data-id="@product.Id" data-class="quantity">
                                @product.Quantity
                            </td>
                            <td data-id="@product.Id" data-class="order">
                                @product.Order
                            </td>
                            <td>
                                @product.CreatedDate.ToDdmmyy()
                            </td>
                            <td style="text-align: center">
                                <form id="frm-change-status" action="@Url.ProductChangeStatusUrl()" method="POST">
                                    <input type="hidden" value="@product.Id" name="id" />
                                    <button class="@(product.Status == true ? "btn-active" : "btn-lock" )" onclick="return confirm('Bạn chắc chắn muốn thay đổi trạng thái sản phẩm này?')">
                                        <i class="fa  @(product.Status == true ? " fa-unlock" : "fa-lock" )"></i>
                                    </button>

                                </form>
                            </td>
                            <td style="width: 100px;text-align: center">
                                @Html.Partial("UI/_EditButton", new ButtonModels
                               {
                                   Id = string.Format("product_{0}", product.Id),
                                   Href = Url.ProductEditUrl(new { product.Id }),
                                   Title = "Cập nhật thông tin sản phẩm " + product.Name
                               })

                                @Html.Partial("UI/_DeleteForm", new DeleteFormModels
                               {
                                   NameOfId = "Id",
                                   ValueOfId = product.Id,
                                   IsConfirm = true,
                                   Url = Url.ProductDeleteUrl()
                               })
                               


                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <input type="hidden" value="@listId" name="listId" id="listId" />
            @Html.Partial("UI/_Pagination", new PaginationModels
       {
           TotalPages = Model.TotalPages,
           BaseUrl = Url.ProductIndexUrl(new
           {
               Model.Keyword,
               Model.State,
               Model.CategoryId,
               Model.Quantity,
               page = 1
           }),
           CurrentPage = Model.Page,
           PageParamFormat = @"page=\d+",
           RecordPerPages = 5
       })

        </div>
    </div>

}

<script type="text/javascript">
    $('#example').editableTableWidget({ editor: $('<input>'), preventColumns: [1, 2, 3, 6, 10, 11, 12] });
    $('table td').on('change', function(evt, newValue) {
        var number = /^\d+$/;
        var productId = $(this).attr('data-id');
        if ($(this).data('class') === 'order') {
            if (!number.test(newValue)) {
                toastr.error('Số thứ tự sản phẩm không hợp lệ !');
                return false;
            }
            if (productId !== '') {
                $.post("@Url.ProductUpdateOrderUrl()", { id:productId, order: newValue })
                    .fail(function () {
                        toastr.error('Lỗi xảy ra khi cập nhật thứ tự sản phẩm !');
                    });
                return true;
            }

        }
        if ($(this).data('class') === 'quantity') {
            if (!number.test(newValue)) {
                toastr.error('Số lượng sản phẩm không hợp lệ !');
                return false;
            }
            if (productId !== '') {
                $.post("@Url.ProductUpdateQuantityUrl()", { id: productId, quantity: newValue })
                    .fail(function () {
                        toastr.error('Lỗi xảy ra khi cập nhật số lượng sản phẩm !');
                    });
                return true;
            }
        }
        if ($(this).data('class') === 'price') {         
            if (newValue !== ''&&productId !== '') {
                $.post("@Url.ProductUpdateQuantityUrl()", { id: productId, price: newValue })
                    .fail(function () {
                        toastr.error('Lỗi xảy ra khi cập nhật giá sản phẩm !');
                    });
                return true;
            }
        }
        if ($(this).data('class') === 'npp') {
            if (!number.test(newValue)) {
                toastr.error('Chiết khấu hợp lệ !');
                return false;
            }
            if (number.test(newValue) && productId !== '') {
                $.post("@Url.ProductUpdateNppUrl()", { id: productId, npp: newValue })
                    .fail(function () {
                        toastr.error('Lỗi xảy ra khi cập nhật chiết khấu sản phẩm !');
                    });
                return true;
            }
        }

        if ($(this).data('class') === 'code') {
            
            if (newValue !=='' && productId !== '') {
                $.post("@Url.ProductUpdateCodeUrl()", { id: productId, code: newValue })
                    .fail(function () {
                        toastr.error('Lỗi xảy ra khi cập nhật mã sản phẩm !');
                    });
                return true;
            }
        }

    });
    $('#chk-select-all').on('click', function () {
        var checked = this.checked;
        $('#example tbody input[type="checkbox"]').each(function () {
            $(this).prop('checked', checked);
        });

    });
    $('#example tbody').on('change', 'input[type="checkbox"]', function () {
        $(this).prop('checked', $(this).is(":checked"));
    });
    $('#btn-hide-all').click(function (e) {
        e.preventDefault();
        var listId = "";
        $('#example tbody input[type="checkbox"]').each(function () {
            if (this.checked) {
                listId = listId + "," + this.value;
            }

        });
        if (listId === '') {
            toastr.error('Chọn sản phẩm bạn muốn ẩn !');
        } else {
            $('#btn-hide-all').prop('disabled', false);
            $('#myPleaseWait').modal('show');
            $.ajax({
                url: "@Url.ProductHideAllUrl()",
                data: { listId },
                type: "post",
                error: function () {
                    $('#myPleaseWait').modal('hide');
                    toastr.error('Lỗi khi ẩn sản phẩm !');
                },
                success : function(result) {
                    if (result.code === "ok") {
                        location.reload();
                    } else {
                        toastr.error('Không tìm thấy sản phẩm cần ẩn');
                    }
                }
            });
        }
    });
    $('#btn-delete-all').click(function (e) {
        e.preventDefault();
        var listId = "";
        $('#example tbody input[type="checkbox"]').each(function () {

            if (this.checked) {
                listId = listId + "," + this.value;
            }

        });
        if (listId === '') {
            toastr.error('Chọn sản phẩm bạn muốn xóa !');
        } else {
            $('#btn-delete-all').prop('disabled', false);
            $('#myPleaseWait').modal('show');
            $.ajax({
                url: "@Url.ProductDeleteAllUrl()",
                data: { listId },
                type: "post",
                error: function () {
                    $('#myPleaseWait').modal('hide');
                    toastr.error('Lỗi khi xóa sản phẩm !');
                },
                success: function (result) {
                    if (result.code === "ok") {
                        location.reload();
                    } else {
                        toastr.error('Không tìm thấy sản phẩm cần xóa');
                    }
                }
            });
        }

    });

</script>

>>>>>>> toai-neal
